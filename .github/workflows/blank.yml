name: "JFrog-GitHub NPM Publish OIDC Integration"
on: push

# This is required as per
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
permissions:
  id-token: write

jobs:
  build:
     runs-on: ubuntu-latest
     env:
      OIDC_AUDIENCE: 'oidctest'
      OIDC_PROVIDER: 'manu-oidc-test'
      PLATFORM_REPO: 'manu-npm-virtual'
     steps:
       - name: Setup JFrog cli / handshake via OIDC, with user
         uses: jfrog/setup-jfrog-cli@v4
         env:  
           JF_URL: https://hts2.jfrog.io
         with:
           oidc-provider-name: ${{ env.OIDC_PROVIDER }}
           oidc-audience: ${{ env.OIDC_AUDIENCE }}

       - name: Ping Artifactory
         run: jf rt ping   
       - name: Get id token
         run: |
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=grpapi" | jq .value | tr -d '"')
          echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
          echo "$GITHUB_ENV"
       - name: Exchange token with access
         env:
          ID_TOKEN: ${{ env.ID_TOKEN }}
          POC_URL: ${{ vars.POC_URL }}
         run: |
          ACCESS_TOKEN=$(curl -XPOST "${JF_URL}/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:access_token\", \"subject_token\": \"$ID_TOKEN\", \"provider_name\": \"github-oidc\"}" | jq .access_token | tr -d '"')
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV  
       - name: display token
         run: |
           curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET https://hts2.jfrog.io/access/api/v1/oidc/manu-oidc-test/identity_mappings/oidctest
        
           
       - name: Get npm auth token
         run: jf rt curl /api/npm/auth > auth
           
       - name: Create .npmrc file
         run: |
          echo "loglevel=http" > .npmrc
          echo "fund=false" >> .npmrc
          echo "@mtg/metrics-emitter:registry=https://hts2.jfrog.io/artifactory/api/npm/manu-npm-virtual/" > .npmrc
          echo "//hts2.jfrog.io/artifactory/api/npm/manu-npm-virtual/:always-auth=true" >> .npmrc
          cat auth | sed "s/^_auth\(.*\)$/\/\/hts2.jfrog.io\/:_auth\1/"  | sed 's/ //g' >> .npmrc 
       - name: npm install
         run: npm install grunt --loglevel verbose
